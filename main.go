package main

import (
	"encoding/json"
	"fmt"
	"os"
)

type Test struct {
	Metrics map[string]interface{}
}

type AutoGenerated struct {
	Status string `json:"status"`
	Data   struct {
		ResultType string `json:"resultType"`
		Result     []struct {
			Metric map[string]interface{}
			Value  []any `json:"value"`
		} `json:"result"`
	} `json:"data"`
}

func main() {

	dat, _ := os.ReadFile("data.json")
	var ret AutoGenerated
	// fmt.Print(string(dat))
	json.Unmarshal([]byte(dat), &ret)
	// fmt.Print(ret)
	for _, value := range ret.Data.Result {
		fmt.Println(value.Metric["instance"])
	}
	// var test Test
	// jsonStr := `{
	// 	"metrics": {
	// 	  "a": "apple",
	// 	  "b": "banana"
	// 	}
	//   }`
	// json.Unmarshal([]byte(jsonStr), &test)
	// fmt.Printf("%+v\n", test)
	// for k, v := range test.Metrics {
	// 	fmt.Println("k:", k, "v:", v)
	// }

	// x := make(map[string]interface{})
	// json.Unmarshal([]byte(jsonStr), &x)
	// fmt.Println(x)
	// m := make(map[string]interface{})
	// m["k1"] = 7
	// m["k2"] = "QQ"
	// fmt.Println("map:", m)

}
